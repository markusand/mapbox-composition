{"version":3,"file":"index.esm.js","sources":["../src/map.js","../src/terrain.js","../node_modules/style-inject/dist/style-inject.es.js","../src/controls/TerrainControl.js","../src/controls/index.js","../src/layer.js","../src/events/events.source.js","../src/events/events.layer.js","../src/geojson.js","../src/marker.js","../src/events/events.marker.js","../src/popup.js","../src/events/events.popup.js"],"sourcesContent":["import { Map } from 'mapbox-gl';\n\nexport default async function useMap(container, options = {}) {\n\tconst map = new Map({ container, ...options });\n\tawait map.once('load');\n\treturn map;\n}\n","const SKY = {\n\t'sky-opacity': ['interpolate', ['linear'], ['zoom'], 0, 0, 8, 1],\n\t'sky-type': 'atmosphere',\n\t'sky-atmosphere-sun-intensity': 5,\n};\n\nexport default function useTerrain(map, options = {}) {\n\tconst { sky = SKY, ...rest } = options;\n\n\tmap.addSource('mapboxgl-dem', {\n\t\ttype: 'raster-dem',\n\t\turl: 'mapbox://mapbox.mapbox-terrain-dem-v1',\n\t\ttileSize: 512,\n\t\t...rest,\n\t});\n\n\tconst extrude = (exaggeration = 1.5) => {\n\t\tmap.setTerrain({ source: 'mapboxgl-dem', exaggeration });\n\t\tif (sky && !map.getLayer('mapboxgl-sky')) {\n\t\t\tmap.addLayer({ id: 'mapboxgl-sky', type: 'sky', paint: sky });\n\t\t}\n\t};\n\n\tconst flatten = () => {\n\t\tmap.setTerrain();\n\t\tif (map.getLayer('mapboxgl-sky')) map.removeLayer('mapboxgl-sky');\n\t};\n\n\tconst isExtruded = () => !!map.getTerrain();\n\n\treturn { extrude, flatten, isExtruded };\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import useTerrain from '../terrain';\nimport './terrain.control.css';\n\nexport default class TerrainControl {\n\tconstructor(options = {}) {\n\t\tthis._options = options;\n\t}\n\n\tonAdd(map) {\n\t\tconst { extrudeOnInit = false, exaggeration, ...options } = this._options;\n\t\tconst terrain = useTerrain(map, options);\n\n\t\tthis._container = document.createElement('div');\n\t\tthis._container.classList.add('mapboxgl-ctrl', 'mapboxgl-ctrl-group');\n\n\t\tconst button = document.createElement('button');\n\t\tbutton.classList.add('mapboxgl-ctrl-terrain');\n\t\tthis._container.appendChild(button);\n\n\t\tconst extrude = doExtrude => {\n\t\t\tif (doExtrude) terrain.extrude(exaggeration);\n\t\t\telse terrain.flatten();\n\t\t\tbutton.classList.toggle('mapboxgl-ctrl-terrain-3d', doExtrude);\n\t\t};\n\n\t\tbutton.addEventListener('click', () => extrude(!terrain.isExtruded()));\n\n\t\t// Reload terrain extrusion state on map style change\n\t\tmap.on('style.load', () => extrude(terrain.isExtruded()));\n\n\t\textrude(extrudeOnInit);\n\n\t\treturn this._container;\n\t}\n\n\tonRemove() {\n\t\tthis._container.parentNode.removeChild(this._container);\n\t}\n}\n","import { NavigationControl, ScaleControl, GeolocateControl, AttributionControl, FullscreenControl } from 'mapbox-gl';\nimport TerrainControl from './TerrainControl';\n\nexport default map => {\n\tconst CONTROLS = {};\n\n\tconst addControl = (name, position, control) => {\n\t\tCONTROLS[name] = control;\n\t\tmap.addControl(control, position);\n\t};\n\n\tconst removeControl = name => {\n\t\tif (CONTROLS[name]) {\n\t\t\tmap.removeControl(CONTROLS[name]);\n\t\t\tdelete CONTROLS[name];\n\t\t}\n\t};\n\n\tconst addNavigation = ({ position = 'top-right', ...config } = {}) => {\n\t\taddControl('navigation', position, new NavigationControl(config));\n\t};\n\n\tconst addScale = ({ position = 'bottom-left', ...config } = {}) => {\n\t\taddControl('scale', position, new ScaleControl(config));\n\t};\n\n\tconst addGeolocate = ({ position = 'top-right', ...config } = {}) => {\n\t\taddControl('geolocate', position, new GeolocateControl(config));\n\t};\n\n\tconst addAttribution = ({ position = 'bottom-right', ...config } = {}) => {\n\t\taddControl('attribution', position, new AttributionControl(config));\n\t};\n\n\tconst addFullscreen = ({ position = 'top-right', ...config } = {}) => {\n\t\taddControl('fullscreen', position, new FullscreenControl(config));\n\t};\n\n\tconst addTerrain = ({ position = 'top-right', ...config } = {}) => {\n\t\taddControl('terrain', position, new TerrainControl(config));\n\t};\n\n\tconst removeNavigation = () => removeControl('navigation');\n\tconst removeScale = () => removeControl('scale');\n\tconst removeGeolocate = () => removeControl('geolocate');\n\tconst removeAttribution = () => removeControl('attribution');\n\tconst removeFullscreen = () => removeControl('fullscreen');\n\tconst removeTerrain = () => removeControl('terrain');\n\n\treturn {\n\t\taddControl,\n\t\tremoveControl,\n\t\taddNavigation,\n\t\taddScale,\n\t\taddGeolocate,\n\t\taddAttribution,\n\t\taddFullscreen,\n\t\taddTerrain,\n\t\tremoveNavigation,\n\t\tremoveScale,\n\t\tremoveGeolocate,\n\t\tremoveAttribution,\n\t\tremoveFullscreen,\n\t\tremoveTerrain,\n\t};\n};\n","import { useSourceEvents, useLayerEvents } from './events';\n\nconst isObject = item => !!item && item.constructor === Object;\n\nexport default function useLayer(map, options = {}) {\n\tconst { bindSourceEvents, unbindSourceEvents } = useSourceEvents(map, options.name, options);\n\tconst { bindLayerEvents, unbindLayerEvents } = useLayerEvents(map, options);\n\tconst LAYERS = [];\n\n\tconst isVisible = id => map.getLayoutProperty(id, 'visibility') === 'visible';\n\n\tconst setVisibility = (visible, layers = Object.keys(LAYERS)) => {\n\t\tconst visibility = visible ? 'visible' : 'none';\n\t\tlayers.forEach(id => map.setLayoutProperty(id, 'visibility', visibility));\n\t};\n\n\tconst setFilters = (filters = [], layers = Object.keys(LAYERS)) => {\n\t\tconst all = isObject(filters) ? ['all', ...Object.values(filters).filter(Boolean)] : filters;\n\t\tlayers.forEach(id => {\n\t\t\tconst filter = all && all.length ? all : LAYERS[id].filter;\n\t\t\tmap.setFilter(id, filter);\n\t\t});\n\t};\n\n\tconst clearLayers = (layers = Object.keys(LAYERS)) => {\n\t\tlayers.forEach(id => {\n\t\t\tunbindLayerEvents(id);\n\t\t\tif (map.getLayer(id)) map.removeLayer(id);\n\t\t\tif (id in LAYERS) delete LAYERS[id];\n\t\t});\n\t};\n\n\tconst addLayers = (layers = []) => {\n\t\tlayers.forEach(({ name, ...params }, i) => {\n\t\t\tconst id = name || `${options.name}--${i}`;\n\t\t\tLAYERS[id] = params;\n\t\t\tmap.addLayer({ id, source: options.name, ...params });\n\t\t\tbindLayerEvents(id);\n\t\t});\n\t};\n\n\tconst clearSource = () => {\n\t\tclearLayers();\n\t\tunbindSourceEvents();\n\t\tif (map.getSource(options.name)) map.removeSource(options.name);\n\t};\n\n\tconst setSource = source => {\n\t\tconst key = options.type === 'geojson' ? 'data' : 'url';\n\t\tconst content = isObject(source) ? source : { [key]: source };\n\t\tmap.addSource(options.name, { type: options.type, ...content });\n\t\tbindSourceEvents();\n\t};\n\n\tconst updateSource = (source, layers = options.layers) => {\n\t\tclearSource();\n\t\tsetSource(source);\n\t\taddLayers(layers);\n\t};\n\n\tsetSource(options.source);\n\taddLayers(options.layers);\n\n\treturn {\n\t\tclearLayers,\n\t\taddLayers,\n\t\tclearSource,\n\t\tsetSource,\n\t\tupdateSource,\n\t\tisVisible,\n\t\tsetVisibility,\n\t\tsetFilters,\n\t};\n}\n","export default (map, sourceId, { onError, onLoadStart, onLoadEnd }) => {\n\tlet isSourceLoading = false;\n\n\tconst sourceLoadStartHandler = event => {\n\t\tconst { sourceDataType = 'content' } = event; // Little hack here\n\t\tif (event.sourceId === sourceId && !isSourceLoading && sourceDataType === 'content') {\n\t\t\tif (onLoadStart) onLoadStart(event);\n\t\t\tisSourceLoading = true;\n\t\t}\n\t};\n\n\tconst sourceLoadEndHandler = event => {\n\t\tif (event.sourceId === sourceId && isSourceLoading && map.isSourceLoaded(sourceId)) {\n\t\t\tif (onLoadEnd) onLoadEnd(event);\n\t\t\tisSourceLoading = false;\n\t\t}\n\t};\n\n\tconst sourceErrorHandler = event => {\n\t\tif (event.sourceId === sourceId) onError(event.error);\n\t};\n\n\tconst bindSourceEvents = () => {\n\t\tif (onLoadStart || onLoadEnd) map.on('sourcedataloading', sourceLoadStartHandler);\n\t\tif (onLoadEnd) map.on('sourcedata', sourceLoadEndHandler);\n\t\tif (onError) map.on('error', sourceErrorHandler);\n\t};\n\n\tconst unbindSourceEvents = () => {\n\t\tmap.off('sourcedataloading', sourceLoadStartHandler);\n\t\tmap.off('sourcedata', sourceLoadEndHandler);\n\t\tmap.off('error', sourceErrorHandler);\n\t};\n\n\treturn { bindSourceEvents, unbindSourceEvents };\n};\n","export default (map, { onClick, onHover }) => {\n\tconst layerClickHandler = event => onClick(event);\n\tconst layerHoverHandler = event => onHover(event);\n\n\tconst bindLayerEvents = layerId => {\n\t\tif (onClick) map.on('click', layerId, layerClickHandler);\n\t\tif (onHover) {\n\t\t\tmap.on('mouseenter', layerId, layerHoverHandler);\n\t\t\tmap.on('mousemove', layerId, layerHoverHandler);\n\t\t\tmap.on('mouseleave', layerId, layerHoverHandler);\n\t\t}\n\t};\n\n\tconst unbindLayerEvents = layerId => {\n\t\tmap.off('click', layerId, layerClickHandler);\n\t\tmap.off('mouseenter', layerId, layerHoverHandler);\n\t\tmap.off('mousemove', layerId, layerHoverHandler);\n\t\tmap.off('mouseleave', layerId, layerHoverHandler);\n\t};\n\n\treturn { bindLayerEvents, unbindLayerEvents };\n};\n","import useLayer from './layer';\n\nexport default function useGeoJSON(map, options = {}) {\n\t// Adapt to GeoJSON source format\n\tconst geoJSON = useLayer(map, {\n\t\t...options,\n\t\ttype: 'geojson',\n\t\tsource: { data: options.source },\n\t});\n\n\t// Override. GeoJSON can be updated by setting new data\n\tconst updateSource = data => {\n\t\tconst source = map.getSource(options.name);\n\t\tif (source) source.setData(data);\n\t\telse geoJSON.updateSource({ data });\n\t};\n\n\treturn { ...geoJSON, updateSource };\n}\n","import { Marker } from 'mapbox-gl';\nimport { useMarkerEvents } from './events';\n\nexport default function useMarker(map, options = {}) {\n\tconst { coordinates, popup, ...rest } = options;\n\tconst { bindMarkerEvents } = useMarkerEvents(options);\n\n\tconst marker = new Marker({ ...rest });\n\tlet markerPopup;\n\n\tconst setLocation = coords => marker.setLngLat(coords).addTo(map);\n\tconst setPopup = newPopup => {\n\t\tmarkerPopup = newPopup;\n\t\tmarker.setPopup(newPopup.popup);\n\t};\n\n\t// Instantiate\n\tif (popup) setPopup(popup);\n\tsetLocation(coordinates);\n\tbindMarkerEvents(marker);\n\n\treturn {\n\t\tsetLocation,\n\t\tget marker() { return marker; },\n\t\tget popup() { return markerPopup; },\n\t\tset popup(newPopup) { setPopup(newPopup); },\n\t};\n}\n","export default ({ onDragStart, onDrag, onDragEnd }) => {\n\tconst bindMarkerEvents = marker => {\n\t\tif (onDragStart) marker.on('dragstart', onDragStart);\n\t\tif (onDrag) marker.on('drag', onDrag);\n\t\tif (onDragEnd) marker.on('dragend', onDragEnd);\n\t};\n\n\tconst unbindMarkerEvents = marker => {\n\t\tmarker.on('dragstart', onDragStart);\n\t\tmarker.on('drag', onDrag);\n\t\tmarker.on('dragend', onDragEnd);\n\t};\n\n\treturn { bindMarkerEvents, unbindMarkerEvents };\n};\n","import { Popup } from 'mapbox-gl';\nimport { usePopupEvents } from './events';\n\nconst uuid = () => Math.random().toString(36).substring(7);\n\nexport default function usePopup(...args) {\n\tconst [map, options = {}] = args.length === 1 ? [, args[0]] : args;\n\tconst { content, coordinates, name = `popup-${uuid()}`, ...rest } = options;\n\tconst { bindPopupEvents } = usePopupEvents(options);\n\n\tconst popup = new Popup(rest);\n\n\tconst setLocation = coords => popup.setLngLat(coords).addTo(map);\n\tconst setContent = newContent => popup.setHTML(newContent);\n\n\t// Instantiate\n\tif (coordinates) setLocation(coordinates);\n\tsetContent(content || `<div id=\"${name}\"></div>`);\n\tbindPopupEvents(popup);\n\n\treturn {\n\t\tget popup() { return popup; },\n\t\tname,\n\t\tsetLocation,\n\t\tsetContent,\n\t};\n}\n","export default ({ onOpen, onClose }) => {\n\tconst bindPopupEvents = popup => {\n\t\tif (onOpen) popup.on('open', onOpen);\n\t\tif (onClose) popup.on('close', onClose);\n\t};\n\n\tconst unbindPopupEvents = popup => {\n\t\tpopup.off('open', onOpen);\n\t\tpopup.off('close', onClose);\n\t};\n\n\treturn { bindPopupEvents, unbindPopupEvents };\n};\n"],"names":["async","useMap","container","options","map","Map","once","SKY","useTerrain","sky","rest","addSource","type","url","tileSize","extrude","exaggeration","setTerrain","source","getLayer","addLayer","id","paint","flatten","removeLayer","isExtruded","getTerrain","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","TerrainControl","constructor","this","_options","onAdd","extrudeOnInit","terrain","_container","classList","add","button","doExtrude","toggle","addEventListener","on","onRemove","parentNode","removeChild","CONTROLS","addControl","name","position","control","removeControl","addNavigation","config","NavigationControl","addScale","ScaleControl","addGeolocate","GeolocateControl","addAttribution","AttributionControl","addFullscreen","FullscreenControl","addTerrain","removeNavigation","removeScale","removeGeolocate","removeAttribution","removeFullscreen","removeTerrain","isObject","item","Object","useLayer","bindSourceEvents","unbindSourceEvents","sourceId","onError","onLoadStart","onLoadEnd","isSourceLoading","sourceLoadStartHandler","event","sourceDataType","sourceLoadEndHandler","isSourceLoaded","sourceErrorHandler","error","off","useSourceEvents","bindLayerEvents","unbindLayerEvents","onClick","onHover","layerClickHandler","layerHoverHandler","layerId","useLayerEvents","LAYERS","clearLayers","layers","keys","forEach","addLayers","params","i","clearSource","getSource","removeSource","setSource","key","content","updateSource","isVisible","getLayoutProperty","setVisibility","visible","visibility","setLayoutProperty","setFilters","filters","all","values","filter","Boolean","length","setFilter","useGeoJSON","geoJSON","data","setData","useMarker","coordinates","popup","bindMarkerEvents","onDragStart","onDrag","onDragEnd","marker","unbindMarkerEvents","useMarkerEvents","Marker","markerPopup","setLocation","coords","setLngLat","addTo","setPopup","newPopup","uuid","Math","random","toString","substring","usePopup","args","bindPopupEvents","onOpen","onClose","unbindPopupEvents","usePopupEvents","Popup","setContent","newContent","setHTML"],"mappings":"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"}