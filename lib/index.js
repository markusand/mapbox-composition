"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("mapbox-gl");const t={"sky-opacity":["interpolate",["linear"],["zoom"],0,0,8,1],"sky-type":"atmosphere","sky-atmosphere-sun-intensity":5};function o(e,o={}){const{sky:n=t,...r}=o;e.addSource("mapboxgl-dem",{type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512,...r});return{extrude:(t=1.5)=>{e.setTerrain({source:"mapboxgl-dem",exaggeration:t}),n&&!e.getLayer("mapboxgl-sky")&&e.addLayer({id:"mapboxgl-sky",type:"sky",paint:n})},flatten:()=>{e.setTerrain(),e.getLayer("mapboxgl-sky")&&e.removeLayer("mapboxgl-sky")},isExtruded:()=>!!e.getTerrain()}}!function(e,t){void 0===t&&(t={});var o=t.insertAt;if(e&&"undefined"!=typeof document){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===o&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}(".mapboxgl-ctrl-terrain::before {\n  content: '3D';\n  color: inherit;\n  font-size: 0.85rem;\n  font-weight: bold;\n  display: block;\n}\n\n.mapboxgl-ctrl-terrain-3d::before {\n  content: '2D';\n  color: inherit;\n  font-size: 0.85rem;\n  font-weight: bold;\n  display: block;\n}\n");class n{constructor(e={}){this._options=e}onAdd(e){const{extrudeOnInit:t=!1,exaggeration:n,...r}=this._options,a=o(e,r);this._container=document.createElement("div"),this._container.classList.add("mapboxgl-ctrl","mapboxgl-ctrl-group");const s=document.createElement("button");s.classList.add("mapboxgl-ctrl-terrain"),this._container.appendChild(s);const i=e=>{e?a.extrude(n):a.flatten(),s.classList.toggle("mapboxgl-ctrl-terrain-3d",e)};return s.addEventListener("click",(()=>i(!a.isExtruded()))),e.on("style.load",(()=>i(a.isExtruded()))),i(t),this._container}onRemove(){this._container.parentNode.removeChild(this._container)}}const r=e=>!!e&&e.constructor===Object;function a(e,t={}){const{bindSourceEvents:o,unbindSourceEvents:n}=((e,t,{onError:o,onLoadStart:n,onLoadEnd:r})=>{let a=!1;const s=e=>{const{sourceDataType:o="content"}=e;e.sourceId!==t||a||"content"!==o||(n&&n(e),a=!0)},i=o=>{o.sourceId===t&&a&&e.isSourceLoaded(t)&&(r&&r(o),a=!1)},c=e=>{e.sourceId===t&&o(e.error)};return{bindSourceEvents:()=>{(n||r)&&e.on("sourcedataloading",s),r&&e.on("sourcedata",i),o&&e.on("error",c)},unbindSourceEvents:()=>{e.off("sourcedataloading",s),e.off("sourcedata",i),e.off("error",c)}}})(e,t.name,t),{bindLayerEvents:a,unbindLayerEvents:s}=((e,{onClick:t,onHover:o})=>{const n=e=>t(e),r=e=>o(e);return{bindLayerEvents:a=>{t&&e.on("click",a,n),o&&(e.on("mouseenter",a,r),e.on("mousemove",a,r),e.on("mouseleave",a,r))},unbindLayerEvents:t=>{e.off("click",t,n),e.off("mouseenter",t,r),e.off("mousemove",t,r),e.off("mouseleave",t,r)}}})(e,t),i=[],c=(t=Object.keys(i))=>{t.forEach((t=>{s(t),e.getLayer(t)&&e.removeLayer(t),t in i&&delete i[t]}))},d=(o=[])=>{o.forEach((({name:o,...n},r)=>{const s=o||`${t.name}--${r}`;i[s]=n,e.addLayer({id:s,source:t.name,...n}),a(s)}))},l=()=>{c(),n(),e.getSource(t.name)&&e.removeSource(t.name)},u=n=>{const a="geojson"===t.type?"data":"url",s=r(n)?n:{[a]:n};e.addSource(t.name,{type:t.type,...s}),o()};return u(t.source),d(t.layers),{clearLayers:c,addLayers:d,clearSource:l,setSource:u,updateSource:(e,o=t.layers)=>{l(),u(e),d(o)},isVisible:t=>"visible"===e.getLayoutProperty(t,"visibility"),setVisibility:(t,o=Object.keys(i))=>{const n=t?"visible":"none";o.forEach((t=>e.setLayoutProperty(t,"visibility",n)))},setFilters:(t=[],o=Object.keys(i))=>{const n=r(t)?["all",...Object.values(t).filter(Boolean)]:t;o.forEach((t=>{const o=n&&n.length?n:i[t].filter;e.setFilter(t,o)}))}}}const s=()=>Math.random().toString(36).substring(7);exports.useControls=t=>{const o={},r=(e,n,r)=>{o[e]=r,t.addControl(r,n)},a=e=>{o[e]&&(t.removeControl(o[e]),delete o[e])};return{addControl:r,removeControl:a,addNavigation:({position:t="top-right",...o}={})=>{r("navigation",t,new e.NavigationControl(o))},addScale:({position:t="bottom-left",...o}={})=>{r("scale",t,new e.ScaleControl(o))},addGeolocate:({position:t="top-right",...o}={})=>{r("geolocate",t,new e.GeolocateControl(o))},addAttribution:({position:t="bottom-right",...o}={})=>{r("attribution",t,new e.AttributionControl(o))},addFullscreen:({position:t="top-right",...o}={})=>{r("fullscreen",t,new e.FullscreenControl(o))},addTerrain:({position:e="top-right",...t}={})=>{r("terrain",e,new n(t))},removeNavigation:()=>a("navigation"),removeScale:()=>a("scale"),removeGeolocate:()=>a("geolocate"),removeAttribution:()=>a("attribution"),removeFullscreen:()=>a("fullscreen"),removeTerrain:()=>a("terrain")}},exports.useGeoJSON=function(e,t={}){const o=a(e,{...t,type:"geojson",source:{data:t.source}});return{...o,updateSource:n=>{const r=e.getSource(t.name);r?r.setData(n):o.updateSource({data:n})}}},exports.useLayer=a,exports.useMap=async function(t,o={}){const n=new e.Map({container:t,...o});return await n.once("load"),n},exports.useMarker=function(t,o={}){const{coordinates:n,popup:r,...a}=o,{bindMarkerEvents:s}=(({onDragStart:e,onDrag:t,onDragEnd:o})=>({bindMarkerEvents:n=>{e&&n.on("dragstart",e),t&&n.on("drag",t),o&&n.on("dragend",o)},unbindMarkerEvents:n=>{n.on("dragstart",e),n.on("drag",t),n.on("dragend",o)}}))(o),i=new e.Marker({...a});let c;const d=e=>i.setLngLat(e).addTo(t),l=e=>{c=e,i.setPopup(e.popup)};return r&&l(r),d(n),s(i),{setLocation:d,get marker(){return i},get popup(){return c},set popup(e){l(e)}}},exports.usePopup=function(...t){const[o,n={}]=1===t.length?[,t[0]]:t,{content:r,coordinates:a,name:i=`popup-${s()}`,...c}=n,{bindPopupEvents:d}=(({onOpen:e,onClose:t})=>({bindPopupEvents:o=>{e&&o.on("open",e),t&&o.on("close",t)},unbindPopupEvents:o=>{o.off("open",e),o.off("close",t)}}))(n),l=new e.Popup(c),u=e=>l.setLngLat(e).addTo(o),p=e=>l.setHTML(e);return a&&u(a),p(r||`<div id="${i}"></div>`),d(l),{get popup(){return l},name:i,setLocation:u,setContent:p}},exports.useTerrain=o;
//# sourceMappingURL=index.js.map
