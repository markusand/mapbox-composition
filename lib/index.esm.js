import{Map as t,NavigationControl as e,ScaleControl as n,GeolocateControl as o,AttributionControl as r,FullscreenControl as a,Marker as s,Popup as i}from"mapbox-gl";async function c(e,n={}){const o=new t({container:e,...n});return await o.once("load"),o}function l(t,e){void 0===e&&(e={});var n=e.insertAt;if(t&&"undefined"!=typeof document){var o=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===n&&o.firstChild?o.insertBefore(r,o.firstChild):o.appendChild(r),r.styleSheet?r.styleSheet.cssText=t:r.appendChild(document.createTextNode(t))}}l(".mapboxgl-ctrl-styles {\n\tdisplay: flex;\n\toverflow: hidden;\n  }\n\n  .mapboxgl-ctrl-styles button {\n\twidth: auto !important;\n\theight: auto !important;\n\talign-items: center;\n\tpadding: 0 !important;\n\tborder-top: 0 !important;\n\tmargin: 0 !important;\n\tdisplay: none !important;\n\tbackground: var(--map-ctrl-styles-background, #fff) !important;\n  }\n\n  .mapboxgl-ctrl-styles:hover button,\n  .mapboxgl-ctrl-styles button.is-active {\n\tdisplay: flex !important;\n  }\n\n  .mapboxgl-ctrl-styles:hover button + button {\n\tborder-left: 1px solid var(--map-ctrl-styles-border, #ddd);\n  }\n\n  .mapboxgl-ctrl-styles button span {\n\tdisplay: block;\n\tmargin: var(--map-ctrl-styles-label-margin, 0.5em 0.8rem);\n  }\n\n  .mapboxgl-ctrl-styles button img {\n\tdisplay: block;\n\theight: var(--map-ctrl-styles-thumb-size, 29px);\n\twidth: var(--map-ctrl-styles-thumb-size, 29px);\n\tmargin: var(--map-ctrl-styles-thumb-margin, 0);\n\topacity: var(--map-ctrl-styles-thumb-opacity, 0.75);\n  }\n\n  .mapboxgl-ctrl-styles button:hover img,\n  .mapboxgl-ctrl-styles button.is-active img {\n\topacity: 1;\n  }\n");class d{constructor({styles:t}){this._styles=t,this._active=null,this._setActive=this._setActive.bind(this)}onAdd(t){return this._map=t,this._container=document.createElement("div"),this._container.classList.add("mapboxgl-ctrl","mapboxgl-ctrl-group","mapboxgl-ctrl-styles"),this._buttons=this._styles.map((t=>{const e=document.createElement("button");if(t.img){const n=document.createElement("img");n.src=t.img,e.appendChild(n)}else{const n=document.createElement("span");n.textContent=t.label,e.appendChild(n)}return e.addEventListener("click",(()=>{this._active!==t.name&&this._map.setStyle(t.url)})),this._container.appendChild(e),e})),this._map.on("style.load",this._setActive),this._setActive(),this._container}_setActive(){this._buttons.forEach((t=>t.classList.remove("is-active")));const{name:t}=this._map.getStyle(),e=this._styles.findIndex((e=>e.name===t));e>=0&&this._buttons[e].classList.add("is-active"),this._active=t}onRemove(){this._container.parentNode.removeChild(this._container),this._map.off("style.load",this._setActive),this._map=void 0}}const p={type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512},m={"sky-opacity":["interpolate",["linear"],["zoom"],0,0,8,1],"sky-type":"atmosphere","sky-atmosphere-sun-intensity":5};function u(t,e={}){const{sky:n=m,...o}=e;return{extrude:({exaggeration:e=1.5,pitch:r=45})=>{t.addSource("mapboxgl-dem",{...p,...o}),t.setTerrain({source:"mapboxgl-dem",exaggeration:e}),t.easeTo({pitch:r}),n&&!t.getLayer("mapboxgl-sky")&&t.addLayer({id:"mapboxgl-sky",type:"sky",paint:n})},flatten:()=>{t.setTerrain(),t.easeTo({pitch:0}),t.getSource("mapboxgl-dem")&&t.removeSource("mapboxgl-dem"),t.getLayer("mapboxgl-sky")&&t.removeLayer("mapboxgl-sky")},isExtruded:()=>!!t.getTerrain()}}l(".mapboxgl-ctrl-terrain::before {\n  content: '3D';\n  color: inherit;\n  font-size: 0.85rem;\n  font-weight: bold;\n  display: block;\n}\n\n.mapboxgl-ctrl-terrain-3d::before {\n  content: '2D';\n  color: inherit;\n  font-size: 0.85rem;\n  font-weight: bold;\n  display: block;\n}\n");class g{constructor(t={}){this._options=t}onAdd(t){const{extrudeOnInit:e=!1,exaggeration:n,pitch:o,...r}=this._options,a=u(t,r);this._container=document.createElement("div"),this._container.classList.add("mapboxgl-ctrl","mapboxgl-ctrl-group");const s=document.createElement("button");s.classList.add("mapboxgl-ctrl-terrain"),this._container.appendChild(s);const i=t=>{t?a.extrude({exaggeration:n,pitch:o}):a.flatten(),s.classList.toggle("mapboxgl-ctrl-terrain-3d",t)};return s.addEventListener("click",(()=>i(!a.isExtruded()))),t.on("style.load",(()=>i(a.isExtruded()))),i(e),this._container}onRemove(){this._container.parentNode.removeChild(this._container)}}var b=t=>{const s={},i=(e,n,o)=>{s[e]=o,t.addControl(o,n)},c=e=>{s[e]&&(t.removeControl(s[e]),delete s[e])};return{addControl:i,removeControl:c,addNavigation:({position:t="top-right",...n}={})=>{i("navigation",t,new e(n))},addScale:({position:t="bottom-left",...e}={})=>{i("scale",t,new n(e))},addGeolocate:({position:t="top-right",...e}={})=>{i("geolocate",t,new o(e))},addAttribution:({position:t="bottom-right",...e}={})=>{i("attribution",t,new r(e))},addFullscreen:({position:t="top-right",...e}={})=>{i("fullscreen",t,new a(e))},addStyles:({position:t="top-right",...e}={})=>{i("styles",t,new d(e))},addTerrain:({position:t="top-right",...e}={})=>{i("terrain",t,new g(e))},removeNavigation:()=>c("navigation"),removeScale:()=>c("scale"),removeGeolocate:()=>c("geolocate"),removeAttribution:()=>c("attribution"),removeFullscreen:()=>c("fullscreen"),removeStyles:()=>c("styles"),removeTerrain:()=>c("terrain")}};const y=t=>!!t&&t.constructor===Object;function h(t,e={}){const{bindSourceEvents:n,unbindSourceEvents:o}=((t,e,{onError:n,onLoadStart:o,onLoadEnd:r})=>{let a=!1;const s=t=>{const{sourceDataType:n="content"}=t;t.sourceId!==e||a||"content"!==n||(o&&o(t),a=!0)},i=n=>{n.sourceId===e&&a&&t.isSourceLoaded(e)&&(r&&r(n),a=!1)},c=t=>{t.sourceId===e&&n(t.error)};return{bindSourceEvents:()=>{(o||r)&&t.on("sourcedataloading",s),r&&t.on("sourcedata",i),n&&t.on("error",c)},unbindSourceEvents:()=>{t.off("sourcedataloading",s),t.off("sourcedata",i),t.off("error",c)}}})(t,e.name,e),{bindLayerEvents:r,unbindLayerEvents:a}=((t,{onClick:e,onHover:n})=>{const o=t=>e(t),r=t=>n(t);return{bindLayerEvents:a=>{e&&t.on("click",a,o),n&&(t.on("mouseenter",a,r),t.on("mousemove",a,r),t.on("mouseleave",a,r))},unbindLayerEvents:e=>{t.off("click",e,o),t.off("mouseenter",e,r),t.off("mousemove",e,r),t.off("mouseleave",e,r)}}})(t,e),s=[],i=(e,n=Object.keys(s))=>{const o=e?"visible":"none";n.forEach((n=>{s[n].visible=e,t.setLayoutProperty(n,"visibility",o)}))},c=(e=Object.keys(s))=>{e.forEach((e=>{a(e),t.getLayer(e)&&t.removeLayer(e),e in s&&delete s[e]}))},l=(n=[])=>{const{name:o,persist:a=!0}=e;n.forEach((({name:e,visible:n=!0,...a},c)=>{const l=e||`${o}--${c}`;s[l]={name:e,...a},t.addLayer({id:l,source:o,...a}),i(n,[l]),r(l)})),a&&t.once("style.load",(()=>l(Object.values(s))))},d=()=>{const{name:n}=e;c(),o(),t.getSource(n)&&t.removeSource(n)},p=o=>{const{name:r,type:a,persist:s=!0}=e,i="geojson"===a?"data":"url",c=y(o)?o:{[i]:o};t.addSource(r,{type:a,...c}),n(),s&&t.once("style.load",(()=>p(o)))};return p(e.source),l(e.layers),{clearLayers:c,addLayers:l,clearSource:d,setSource:p,updateSource:(t,n=e.layers)=>{d(),p(t),l(n)},isVisible:e=>"visible"===t.getLayoutProperty(e,"visibility"),setVisibility:i,setFilters:(e=[],n=Object.keys(s))=>{const o=y(e)?["all",...Object.values(e).filter(Boolean)]:e;n.forEach((e=>{s[e].filter=o&&o.length?o:s[e].filter,t.setFilter(e,s[e].filter)}))}}}function v(t,e={}){const n=h(t,{...e,type:"geojson",source:{data:e.source}});return{...n,updateSource:o=>{const r=t.getSource(e.name);r?r.setData(o):n.updateSource({data:o})}}}function f(t,e={}){const{coordinates:n,popup:o,...r}=e,{bindMarkerEvents:a}=(({onDragStart:t,onDrag:e,onDragEnd:n})=>({bindMarkerEvents:o=>{t&&o.on("dragstart",t),e&&o.on("drag",e),n&&o.on("dragend",n)},unbindMarkerEvents:o=>{o.on("dragstart",t),o.on("drag",e),o.on("dragend",n)}}))(e),i=new s({...r});let c;const l=e=>i.setLngLat(e).addTo(t),d=t=>{c=t,i.setPopup(t.popup)};return o&&d(o),l(n),a(i),{setLocation:l,get marker(){return i},get popup(){return c},set popup(t){d(t)}}}const x=()=>Math.random().toString(36).substring(7);function E(...t){const[e,n={}]=1===t.length?[,t[0]]:t,{content:o,coordinates:r,name:a=`popup-${x()}`,...s}=n,{bindPopupEvents:c}=(({onOpen:t,onClose:e})=>({bindPopupEvents:n=>{t&&n.on("open",t),e&&n.on("close",e)},unbindPopupEvents:n=>{n.off("open",t),n.off("close",e)}}))(n),l=new i(s),d=t=>l.setLngLat(t).addTo(e),p=t=>l.setHTML(t);return r&&d(r),p(o||`<div id="${a}"></div>`),c(l),{get popup(){return l},name:a,setLocation:d,setContent:p}}export{b as useControls,v as useGeoJSON,h as useLayer,c as useMap,f as useMarker,E as usePopup,u as useTerrain};
//# sourceMappingURL=index.esm.js.map
