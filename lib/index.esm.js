import{Map as e,NavigationControl as t,ScaleControl as o,GeolocateControl as n,AttributionControl as r,FullscreenControl as a,Marker as s,Popup as i}from"mapbox-gl";async function c(t,o={}){const n=new e({container:t,...o});return await n.once("load"),n}const d={"sky-opacity":["interpolate",["linear"],["zoom"],0,0,8,1],"sky-type":"atmosphere","sky-atmosphere-sun-intensity":5};function l(e,t={}){const{sky:o=d,...n}=t;e.addSource("mapboxgl-dem",{type:"raster-dem",url:"mapbox://mapbox.mapbox-terrain-dem-v1",tileSize:512,...n});return{extrude:(t=1.5)=>{e.setTerrain({source:"mapboxgl-dem",exaggeration:t}),o&&!e.getLayer("mapboxgl-sky")&&e.addLayer({id:"mapboxgl-sky",type:"sky",paint:o})},flatten:()=>{e.setTerrain(),e.getLayer("mapboxgl-sky")&&e.removeLayer("mapboxgl-sky")},isExtruded:()=>!!e.getTerrain()}}!function(e,t){void 0===t&&(t={});var o=t.insertAt;if(e&&"undefined"!=typeof document){var n=document.head||document.getElementsByTagName("head")[0],r=document.createElement("style");r.type="text/css","top"===o&&n.firstChild?n.insertBefore(r,n.firstChild):n.appendChild(r),r.styleSheet?r.styleSheet.cssText=e:r.appendChild(document.createTextNode(e))}}(".mapboxgl-ctrl-terrain::before {\n  content: '3D';\n  color: inherit;\n  font-size: 0.85rem;\n  font-weight: bold;\n  display: block;\n}\n\n.mapboxgl-ctrl-terrain-3d::before {\n  content: '2D';\n  color: inherit;\n  font-size: 0.85rem;\n  font-weight: bold;\n  display: block;\n}\n");class u{constructor(e={}){this._options=e}onAdd(e){const{extrudeOnInit:t=!1,exaggeration:o,...n}=this._options,r=l(e,n);this._container=document.createElement("div"),this._container.classList.add("mapboxgl-ctrl","mapboxgl-ctrl-group");const a=document.createElement("button");a.classList.add("mapboxgl-ctrl-terrain"),this._container.appendChild(a);const s=e=>{e?r.extrude(o):r.flatten(),a.classList.toggle("mapboxgl-ctrl-terrain-3d",e)};return a.addEventListener("click",(()=>s(!r.isExtruded()))),e.on("style.load",(()=>s(r.isExtruded()))),s(t),this._container}onRemove(){this._container.parentNode.removeChild(this._container)}}var p=e=>{const s={},i=(t,o,n)=>{s[t]=n,e.addControl(n,o)},c=t=>{s[t]&&(e.removeControl(s[t]),delete s[t])};return{addControl:i,removeControl:c,addNavigation:({position:e="top-right",...o}={})=>{i("navigation",e,new t(o))},addScale:({position:e="bottom-left",...t}={})=>{i("scale",e,new o(t))},addGeolocate:({position:e="top-right",...t}={})=>{i("geolocate",e,new n(t))},addAttribution:({position:e="bottom-right",...t}={})=>{i("attribution",e,new r(t))},addFullscreen:({position:e="top-right",...t}={})=>{i("fullscreen",e,new a(t))},addTerrain:({position:e="top-right",...t}={})=>{i("terrain",e,new u(t))},removeNavigation:()=>c("navigation"),removeScale:()=>c("scale"),removeGeolocate:()=>c("geolocate"),removeAttribution:()=>c("attribution"),removeFullscreen:()=>c("fullscreen"),removeTerrain:()=>c("terrain")}};const m=e=>!!e&&e.constructor===Object;function g(e,t={}){const{bindSourceEvents:o,unbindSourceEvents:n}=((e,t,{onError:o,onLoadStart:n,onLoadEnd:r})=>{let a=!1;const s=e=>{const{sourceDataType:o="content"}=e;e.sourceId!==t||a||"content"!==o||(n&&n(e),a=!0)},i=o=>{o.sourceId===t&&a&&e.isSourceLoaded(t)&&(r&&r(o),a=!1)},c=e=>{e.sourceId===t&&o(e.error)};return{bindSourceEvents:()=>{(n||r)&&e.on("sourcedataloading",s),r&&e.on("sourcedata",i),o&&e.on("error",c)},unbindSourceEvents:()=>{e.off("sourcedataloading",s),e.off("sourcedata",i),e.off("error",c)}}})(e,t.name,t),{bindLayerEvents:r,unbindLayerEvents:a}=((e,{onClick:t,onHover:o})=>{const n=e=>t(e),r=e=>o(e);return{bindLayerEvents:a=>{t&&e.on("click",a,n),o&&(e.on("mouseenter",a,r),e.on("mousemove",a,r),e.on("mouseleave",a,r))},unbindLayerEvents:t=>{e.off("click",t,n),e.off("mouseenter",t,r),e.off("mousemove",t,r),e.off("mouseleave",t,r)}}})(e,t),s=[],i=(t=Object.keys(s))=>{t.forEach((t=>{a(t),e.getLayer(t)&&e.removeLayer(t),t in s&&delete s[t]}))},c=(o=[])=>{o.forEach((({name:o,...n},a)=>{const i=o||`${t.name}--${a}`;s[i]=n,e.addLayer({id:i,source:t.name,...n}),r(i)}))},d=()=>{i(),n(),e.getSource(t.name)&&e.removeSource(t.name)},l=n=>{const r="geojson"===t.type?"data":"url",a=m(n)?n:{[r]:n};e.addSource(t.name,{type:t.type,...a}),o()};return l(t.source),c(t.layers),{clearLayers:i,addLayers:c,clearSource:d,setSource:l,updateSource:(e,o=t.layers)=>{d(),l(e),c(o)},isVisible:t=>"visible"===e.getLayoutProperty(t,"visibility"),setVisibility:(t,o=Object.keys(s))=>{const n=t?"visible":"none";o.forEach((t=>e.setLayoutProperty(t,"visibility",n)))},setFilters:(t=[],o=Object.keys(s))=>{const n=m(t)?["all",...Object.values(t).filter(Boolean)]:t;o.forEach((t=>{const o=n&&n.length?n:s[t].filter;e.setFilter(t,o)}))}}}function b(e,t={}){const o=g(e,{...t,type:"geojson",source:{data:t.source}});return{...o,updateSource:n=>{const r=e.getSource(t.name);r?r.setData(n):o.updateSource({data:n})}}}function y(e,t={}){const{coordinates:o,popup:n,...r}=t,{bindMarkerEvents:a}=(({onDragStart:e,onDrag:t,onDragEnd:o})=>({bindMarkerEvents:n=>{e&&n.on("dragstart",e),t&&n.on("drag",t),o&&n.on("dragend",o)},unbindMarkerEvents:n=>{n.on("dragstart",e),n.on("drag",t),n.on("dragend",o)}}))(t),i=new s({...r});let c;const d=t=>i.setLngLat(t).addTo(e),l=e=>{c=e,i.setPopup(e.popup)};return n&&l(n),d(o),a(i),{setLocation:d,get marker(){return i},get popup(){return c},set popup(e){l(e)}}}const v=()=>Math.random().toString(36).substring(7);function f(...e){const[t,o={}]=1===e.length?[,e[0]]:e,{content:n,coordinates:r,name:a=`popup-${v()}`,...s}=o,{bindPopupEvents:c}=(({onOpen:e,onClose:t})=>({bindPopupEvents:o=>{e&&o.on("open",e),t&&o.on("close",t)},unbindPopupEvents:o=>{o.off("open",e),o.off("close",t)}}))(o),d=new i(s),l=e=>d.setLngLat(e).addTo(t),u=e=>d.setHTML(e);return r&&l(r),u(n||`<div id="${a}"></div>`),c(d),{get popup(){return d},name:a,setLocation:l,setContent:u}}export{p as useControls,b as useGeoJSON,g as useLayer,c as useMap,y as useMarker,f as usePopup,l as useTerrain};
//# sourceMappingURL=index.esm.js.map
